"use strict";(self.webpackChunkvue=self.webpackChunkvue||[]).push([[8918],{8918:function(e,l,i){i.r(l),i.d(l,{default:function(){return c}});var t=i(6252),n=[(0,t.uE)("<h4>Object.freeze和Object.seal</h4><ul><li>Object.freeze，不能改，不能增，不能删 冻结 <ul><li>禁止添加属性，禁止更改属性，禁止删除属性，</li><li>为对象的每一个属性设置，writable:false，禁止更改属性</li><li>为对象的每一个属性设置，configurable:false ，禁止删除</li><li>Object.preventExtension()，禁止添加属性，禁止更改原型</li><li>Object.isFrozen() 判断对象是否冻结</li></ul></li><li>Object.seal，不能增，不能删 封闭 <ul><li>Object.preventExtension()，禁止添加属性，禁止更改原型</li><li>为对象的每一个属性设置，configurable:false，禁止更改属性值，</li><li>Object.isSealed() 判断对象是否封闭</li></ul></li><li>Object.preventExtension ，不能增 ，不可扩展 <ul><li>Object.preventExtension() 禁止添加属性，禁止修改原型</li><li>Object.isExtensible() 判断对象是否可扩展</li></ul></li></ul><h4>Object</h4><ul><li>Object.entries() 返回键值对数组</li><li>Object.keys() 返回键数组</li><li>Object.values() 返回值数组</li><li>Object.fromEntries() 键值对列表转换为对象</li></ul>",4)];const u={};var c=(0,i(3744).Z)(u,[["render",function(e,l){return(0,t.wg)(),(0,t.iD)("section",null,n)}]])}}]);