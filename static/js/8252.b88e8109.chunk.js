"use strict";(self.webpackChunkvue=self.webpackChunkvue||[]).push([[8252],{68252:function(l,i,u){u.r(i),u.d(i,{default:function(){return r}});var t=u(66252),e=[(0,t.uE)("<h4>函数式编程和面向对象</h4><ul><li>OO 数据存放在属性中和静态成员中</li><li>函数式 数据存放在 各级作用域中</li></ul><h4>继承 Inheritance</h4><ul>\x3c!-- &lt;li&gt;拥有相同属性和方法不需要多次重复的书写&lt;/li&gt; --\x3e<li>函数式 <ul><li>rust 子类实现一个父类的实例</li><li>子类调用父类的构造函数</li><li> js原型链继承</li></ul></li><li>面向对象 class继承</li></ul><h4>多态</h4><ul><li>函数式 <ul><li>trait 每个Struct 实现自己的trait</li><li>子类直接重写同名方法</li></ul></li><li>子类指针指向父类根据子类的方法不同调用不同的方法 父类是虚函数只有声明不需要实现</li></ul><h4>封装</h4><ul><li>向外暴露接口，内部隐藏，外部调用方法</li><li></li></ul>",8)];const n={};var r=(0,u(83744).Z)(n,[["render",function(l,i){return(0,t.wg)(),(0,t.iD)("section",null,e)}]])}}]);